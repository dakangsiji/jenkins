
pipeline {
    agent { label 'docker' }
    
    stages {
        stage('Port-Forward and Sync') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'tommylike_github_token', passwordVariable: 'GIT_PASS', usernameVariable: 'GIT_USER')]) {
                    sh """
                        git clone -b ${CODE_BRANCH} https://${GIT_USER}:${GIT_PASS}@github.com/opensourceways/deploy.git
                    """
                }

                script {
                    
                    def vaultKubeconfig = env.vault_kubeconfig
                    def vaultToken = env.vault_token
                    def targetService = env.DST_OBJECT

                    withCredentials([
                        file(credentialsId: "${vaultKubeconfig}", variable: 'VAULT_KUBECONFIG'),
                        string(credentialsId: "${vaultToken}", variable: 'VAULT_TOKEN')
                    ]) {
                    def services = [
                        'cve-manager-ng': [
                            srcfile: 'cve-manager-ng.tpl',
                            destfile: 'cvemanagerngConfData'
                        ]
                    ]
                    def serviceConfig = services.get(targetService)

                    dir("${SUB_PATH}") {
                        sh """
                            kubectl port-forward vault-0 ${VAULT_PORT}:8200 --address ${VAULT_ADDR} -n vault --kubeconfig ${VAULT_KUBECONFIG} &
                            
                            sleep 5
                            
                            docker run --rm -e VAULT_TOKEN=${VAULT_TOKEN} -v ${WORKSPACE}/${SUB_PATH}:/data swr.cn-southwest-2.myhuaweicloud.com/modelfoundry/hairyhenderson/gomplate:stable-slim \\
                              -d secret=vault+http://${VAULT_ADDR}:${VAULT_PORT}/${VAULT_SRC_SECRET_PATH} \\
                              -f /data/${serviceConfig.srcfile} > application.yml

                            cat application.yml

                            // TEMP_FILE=\$(mktemp)
                            // cat application.yml > \$TEMP_FILE

                            docker run --rm --cap-add IPC_LOCK -e VAULT_TOKEN=${VAULT_TOKEN} -v ${WORKSPACE}/${SUB_PATH}:/data swr.cn-southwest-2.myhuaweicloud.com/modelfoundry/hashicorp/vault:latest vault kv patch \\
                              -address=http://${VAULT_ADDR}:${VAULT_PORT} \\
                              -mount=${VAULT_KV_ENGINE_NAME} \\
                              ${VAULT_DST_SECRET_PATH} \\
                              ${serviceConfig.destfile}="@./application.yml"
                        """

                        sh 'echo "[$(date)] Configuration updated successfully"'
                        }
                    }
                }
            }
        }
    }

    post {
        always {
                cleanWs()
            }
        }
}
